const { Telegraf, Markup } = require('telegraf')
const bot = new Telegraf('1783153297:AAEXHFZePlFTBI827xsXgi7CpKONqfR-Z6E') //—Å—é–¥–∞ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–ª botFather

//bot.use(Telegraf.log())

// bot.start(async (ctx) => {
//     await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", Markup.inlineKeyboard([
//         Markup.button.callback("üìï –î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–ª–∞–≤—ã", "chapters"),
//         Markup.button.callback("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings")
//     ],));    
// })

bot.start(async (ctx) => {
    await ctx.reply(
`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏—Å—Ç–æ—Ä–∏—é –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–≥–æ –∑–∞–º–∫–∞.
–¢–µ–∫—Å—Ç –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫.
–°–æ–¥–µ—Ä–∂–∞—Ç—å —ç–º–æ–¥–∑–∏ (üìû).`
    )
    setTimeout(async () => {
        await ctx.reply('–¢–∞–∫ –∂–µ –æ–±—Ä–∞—â—É —Ç–≤–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞–±–æ—Ä–∞', 
        Markup.keyboard([
            ['üìï –ì–ª–∞–≤—ã'], // Row1 with 2 buttons
            ['üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å'], // Row2 with 2 buttons
            ['‚≠êÔ∏è –û—Ü–µ–Ω–∏—Ç—å –Ω–∞—Å', 'üë• –ü–æ–¥–µ–ª–∏—Ç—å—Å—è'] // Row3 with 3 buttons
        ])
        .oneTime()
        .resize()
        )
    }, 1500);
})

bot.hears('üìï –ì–ª–∞–≤—ã', async (ctx) => {
    await ctx.reply('–í–æ–∑–º–æ–∂–Ω–æ –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–±—ã—Ç–∏–π. –ú–æ–≥—É –ø–∏—Å–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è')
    setTimeout(async () => {
        temp = await ctx.reply('–ê –º–æ–≥—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ. –ñ–º—è–∫–Ω–∏ –Ω–∏–∂–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞', 
        Markup.keyboard([
            Markup.button.callback('–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π', 'edit'), // Row1 with 2 buttons
            Markup.button.callback('–ü—É—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞', 'empty'), // Row2 with 2 buttons
        ])
        .oneTime()
        .resize()
        )
    }, 1500)
})

bot.hears('–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π', async (ctx) => {
    await ctx.reply('–ö—Ä—á, –Ω–∏—Ö—É—è –Ω–µ –ø–∞—à–µ—Ç, —Å–¥–µ–ª–∞—Ç—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç, –Ω–æ —Å—Ç–∏–ª—è –≤ —ç—Ç–æ–º –Ω–µ—Ç. –ê —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞—é –∫—Ä–∞—Å–æ—Ç—É',
    Markup.inlineKeyboard([
        Markup.button.callback('üîÆ –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é', 'edit'),
        Markup.button.callback('–°–¥–µ–ª–∞—é –Ω–∏—Ö—É—è', 'empty')
    ])
    .resize()
    )
})

bot.on('callback_query', (ctx) => {
    console.log(ctx.callbackQuery.data);
    if (ctx.callbackQuery.data === 'edit') {
        ctx.editMessageText("–¢–µ–ø–µ—Ä—å —Ç—É—Ç –¥—Ä—É–≥–∏–µ –±—É–∫–∞–≤—ã =(")
        ctx.answerCbQuery()

    }    

});

bot.launch();